#!/usr/bin/env bash

# Adpated from thoughtbot's laptop script.
# https://github.com/thoughtbot/laptop

laptop_echo() {
  local fmt="$1"; shift

  printf "\\n[LAPTOP] $fmt\\n" "$@"
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

# Mac CPU
CPU=$(uname -p)
if [[ "$CPU" == "arm" ]]; then
    HOMEBREW_PREFIX="/opt/homebrew"
else
    HOMEBREW_PREFIX="/usr/local"
fi

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "${LOGNAME}:admin" $HOMEBREW_PREFIX
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "${LOGNAME}:admin" "$HOMEBREW_PREFIX"
fi

update_zsh_shell() {
  local shell_path;
  shell_path="$(command -v zsh)"

  laptop_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    laptop_echo "Adding '${shell_path}' to /etc/shells"
    sudo sh -c "echo ${shell_path} >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
}

if ! command -v brew >/dev/null; then
  laptop_echo "Installing Homebrew ..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

eval "$(${HOMEBREW_PREFIX}/bin/brew shellenv)"

if brew list | grep -Fq brew-cask; then
  laptop_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

laptop_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151
brew bundle --file=- <<EOF
tap "homebrew/bundle"
tap "homebrew/cask"
tap "homebrew/cask-fonts"
tap "homebrew/cask-versions"
tap "homebrew/core"
tap "homebrew/services"

brew "git"
brew "sqlite"
brew "wget"
brew "zsh"
EOF

update_zsh_shell

# link Brewfile to Home
ln -sf "$HOMEBREW_PREFIX/Brewfile" "$HOME/Brewfile"

laptop_echo "Laptop installation completed successfully!"